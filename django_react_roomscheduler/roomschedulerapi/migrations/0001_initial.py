# Generated by Django 5.0.1 on 2024-03-25 19:55

import django.contrib.auth.models
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('building_id', models.AutoField(primary_key=True, serialize=False)),
                ('building_name', models.CharField(max_length=100, unique=True)),
                ('image_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('classroom_id', models.AutoField(primary_key=True, serialize=False)),
                ('classroom_name', models.CharField(default=0, max_length=1000)),
                ('classroom_number', models.CharField(default=0)),
                ('total_seats', models.IntegerField(default=0)),
                ('width_of_room', models.IntegerField(default=0)),
                ('length_of_room', models.IntegerField(default=0)),
                ('projectors', models.IntegerField(default=0)),
                ('microphone_system', models.BooleanField(default=0)),
                ('blueray_player', models.BooleanField(default=False)),
                ('laptop_hdmi', models.BooleanField(default=False)),
                ('zoom_camera', models.BooleanField(default=False)),
                ('document_camera', models.BooleanField(default=False)),
                ('storage', models.BooleanField(default=False)),
                ('movable_chairs', models.BooleanField(default=False)),
                ('printer', models.BooleanField(default=False)),
                ('piano', models.BooleanField(default=False)),
                ('stereo_system', models.BooleanField(default=False)),
                ('total_tv', models.IntegerField(default=0)),
                ('sinks', models.IntegerField(default=0)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('floor_name', models.CharField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OptiScore',
            fields=[
                ('score_id', models.AutoField(primary_key=True, serialize=False)),
                ('prime_time_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('prime_time_utilization', models.DecimalField(decimal_places=2, max_digits=5)),
                ('capacity_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('instructor_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('instructor_methods', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(), size=None)),
                ('double_booking_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('idle_time_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('double_booking', models.BooleanField(default=False)),
                ('overall_score', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('term_id', models.AutoField(primary_key=True, serialize=False)),
                ('term_name', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('instructor', models.CharField(default='')),
                ('first_day', models.DateField()),
                ('last_day', models.DateField()),
                ('course_name', models.CharField(max_length=100)),
                ('credits', models.IntegerField(default=0)),
                ('course_cap', models.IntegerField(default=0)),
                ('waitlist_cap', models.IntegerField(default=0)),
                ('waitlist_total', models.IntegerField(default=0)),
                ('enrollment_total', models.IntegerField(default=0)),
                ('course_level', models.CharField(max_length=10)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('classroom', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='roomschedulerapi.classroom')),
                ('term', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='roomschedulerapi.term')),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('floor_id', models.AutoField(primary_key=True, serialize=False)),
                ('floor_name', models.CharField(max_length=50)),
                ('building_name', models.CharField(default=0, max_length=50)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roomschedulerapi.building')),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='floor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roomschedulerapi.floor'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='optimization_score',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='roomschedulerapi.optiscore'),
        ),
        migrations.CreateModel(
            name='SavedSchedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('course_ids', models.ManyToManyField(to='roomschedulerapi.course')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('user_schedules', models.ManyToManyField(to='roomschedulerapi.savedschedule')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='term',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='roomschedulerapi.term'),
        ),
    ]
